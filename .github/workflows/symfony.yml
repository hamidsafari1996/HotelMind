# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Symfony

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_sqlite

      - name: Set APP_ENV
        run: echo "APP_ENV=test" >> $GITHUB_ENV

      - name: Set DATABASE_URL for cache:clear
        run: echo "DATABASE_URL=sqlite:///%kernel.project_dir%/data/database.sqlite" >> $GITHUB_ENV

      - name: Copy .env.test.local if needed
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
        working-directory: backend

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: backend/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --no-progress
        working-directory: backend

      - name: Create Database
        run: |
          mkdir -p data
          touch data/database.sqlite
        working-directory: backend

      - name: Run Doctrine migrations on test database
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=test
        working-directory: backend

      - name: Execute tests via PHPUnit
        env:
          DATABASE_URL: mysql://username:password@127.0.0.1:3306/test_database
          APP_ENV: test
        run: vendor/bin/phpunit
        working-directory: backen
